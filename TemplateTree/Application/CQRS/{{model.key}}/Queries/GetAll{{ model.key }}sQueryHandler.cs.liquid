using Application.Abstractions.Messaging;
using Domain.Repositories;
using SharedKernel.Core;

namespace Application.CQRS.{{ model.key }}.Queries;

public sealed class GetAll{{ model.key }}sQueryHandler(I{{ model.key }}Repository {{ model.key | string.downcase }}Repository) : IQueryHandler<GetAll{{ model.key }}sQuery, IEnumerable<Domain.Models.{{ model.key }}>>
{
    public async Task<Result<IEnumerable<Domain.Models.{{ model.key }}>>> Handle(GetAll{{ model.key }}sQuery request, CancellationToken cancellationToken)
    {
        return Result.Success(await {{ model.key | string.downcase }}Repository.GetAll());
    }
}